@using DataAbstraction.Models
@using DataAbstraction.Models.Incoming

@model CreateIncomingModel
<div class="container">

    <h4>Добавить изменение по деньгам</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">

            @if (ViewData["Message"] != null)
            {
                <strong style="color:red"> @ViewData["Message"] </strong>
            }

            <form method="post" action="/Incoming/CreateFromText">
                <div class="input-group mb-3">
                    <input type="text" name="Text" class="form-control" placeholder="Вставьте строку из отчета" aria-describedby="button-addon1">
                    <button class="btn btn-outline-secondary" type="submit" id="button-addon1">Анализировать</button>
                </div>
            </form>

            <form asp-action="CreateIncoming">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Date" class="control-label"></label>
                        <!--<input asp-for="Date" class="form-control" />-->
                        @Html.TextBoxFor(model => model.Date, "{0:yyyy-MM-ddTHH:mm:ss}", 
                            new
                                {
                                    @class = "form-control",
                                    required = "required",
                                    @type = "datetime-local"
                                })
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="SecCode" class="control-label"></label>
                    @Html.DropDownListFor(model => model.SecCode, new SelectList(StaticData.SecCodes, "SecCode", "SecCode"), 
                        new {
                                @class = "form-control"
                            })
                </div>

                <div class="form-group">
                    <label asp-for="Category" class="control-label"></label>
                    @Html.DropDownListFor(model => model.Category, new SelectList(StaticData.Categories, "Id", "Name"),
                        new {
                                @class = "form-control"
                            })
                </div>


                <div class="form-group">
                    <label asp-for="Value" class="control-label"></label>
                    <input asp-for="Value" class="form-control" />
                    <span asp-validation-for="Value" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Comission" class="control-label"></label>
                    <input asp-for="Comission" class="form-control" />
                    <span asp-validation-for="Comission" class="text-danger"></span>
                    @if (ViewData["ComissionMessage"] != null)
                    {
                        <span style="color:blue"> @ViewData["ComissionMessage"] </span>
                    }
                </div>

                <br />
                <div class="form-group btn-group" style="width: 100%;">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    <a asp-action="Incoming" class="btn btn-outline-success">Назад к списку зачислений</a>
                </div>
            </form>
        </div>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }

</div>